@mixin burger {
	z-index: 15;
	display: block;
	position: absolute;
	width: 30px;
	height: 15px;
	border: none;
	background: none;
	cursor: pointer;
	top: 50%;
	transform: translate(0, -50%);
	right: 10px;

	&::before,
	&::after {
		content: "";
	}

	& span,
	&::before,
	&::after {
		width: 100%;
		right: 0;
		position: absolute;
		height: 10%;
		transition: all 0.3s ease 0s;
		background: #4d4959;
		border-radius: 5px;
	}

	&::before {
		top: 0;
	}

	& span {
		top: 50%;
		transform: translate(0px, -50%);
	}

	&::after {
		bottom: 0;
	}

	&._active {
		&::before {
			top: 50%;
			transform: translate(0, -50%) rotate(45deg);
		}

		& span {
			opacity: 0;
		}

		&::after {
			top: 50%;
			transform: translate(0, -50%) rotate(-45deg);
		}
	}
}

@mixin adaptive-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type == 1 {
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type == 2 {
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px}k + #{$addSize} * ((100vw - 320px) / #{$maxWidth - $maxWidthContainer}));
		}
	} @else {
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}
